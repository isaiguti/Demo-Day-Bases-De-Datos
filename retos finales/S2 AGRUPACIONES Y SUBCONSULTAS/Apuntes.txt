--Búsqueda de patrones

-- % Caza con cualquier cadena, de cualquier longitud, incluso cadenas vacías.
-- _ Caza con un único carácter.


-- Esta consulta, obtiene el campo nombre de la tabla persona siempre y cuando el apellido paterno inicie con la letra S.
-- Recordar que el % indica que puede ser reemplazado por cualquier cadena. Por ejemplo, puede encontrar las cadenas ‘Sánchez’, ‘Soto’, ‘Saldivar’.

SELECT nombre
FROM persona
WHERE apellido_paterno LIKE ‘S%’;

-- Esta consulta, obtiene el campo nombre de la tabla persona siempre y cuando el apellido materno, contenga la subcadena am. 
-- Los símbolos % indican que el inicio y el final de la cadena puede ser reemplazado por cualquier otra, pero siempre debe haber una subcadena am en medio. Por ejemplo, puede encontrar las cadenas ‘Ramírez’ o ‘Samaniego’.

SELECT nombre
 FROM persona
 WHERE apellido_materno LIKE ‘%am%’;

-- Esta consulta obtiene el campo nombre de la tabla persona siempre y cuando el apellido materno, contenga subcadena Mendoz. 
-- El símbolo _ indica que puede ser reemplazado por cualquier caracter. Por ejemplo, puede encontrar las cadenas ‘Mendoza’, ‘Mendoze’, ‘Mendozo’, etc.

SELECT nombre
 FROM persona
 WHERE apellido_materno LIKE ‘Mendoz_’;

-- Como puede apreciarse en la consulta anterior, podemos combinar la restricción LIKE con los operadores lógicos. 
--En este caso se traen los nombres de aquellas personas cuyo apellido no termina con a.

SELECT nombre
 FROM persona
 WHERE apellido_paterno NOT LIKE ‘%a’;

-- Funciones de agrupamiento

-- SUM suma todos los valores de una columna
-- COUNT cuenta los valores de una columna
-- MIN obtiene el valor mínimo de una columna
-- MAX obtiene el valor máximo de una columna
-- AVG obtiene el promedio de los valores de una columna

-- Esta consulta obtiene la suma de los salarios de los empleados de una empresa y sólo considera aquellos salarios mayores a 5000. La columna resultante se nombra como sum(salario), sin embargo, este nombre no es claro, por lo que la restricción AS nos permite agregar un alias a la columna y llamarla en su lugar Salario Total.

SELECT sum(salario) AS “Salario Total”
FROM empleados
WHERE salario > 5000;

-- Esta consulta cuenta el número de ocupaciones que hay en la columna ocupación.
-- Es importante mencionar que la función count únicamente cuenta registros que no son nulos.

SELECT count(ocupación) AS “Número de ocupaciones”
FROM persona;

-- Estas consultas obtienen la edad más grande y más pequeña, respectivamente, en un conjunto de personas.

SELECT max(edad) AS “Mayor”
FROM persona;

SELECT min(edad) AS “Mayor”
FROM persona;

-- La consulta anterior, calcula el promedio de los estudiantes cuya calificación fue aprobatoria.

SELECT avg(calificacion) “Promedio”
FROM estudiantes
WHERE calificacion >= 6.0;

-- Mas funciones aquí -> https://www.techonthenet.com/mysql/functions/

-- Agrupamientos

-- Ahora que sabes cómo operan las funciones de agrupamiento, estás listo para hacer tus primeros agrupamientos. 
-- Un agrupamiento, toma valores distintos de una columna y permite hacer un análisis detallado mediante las funciones de agrupamiento.

-- Por ejemplo, supongamos que, existe una tabla que almacena la ocupación de un conjunto de personas y quisiéramos saber cuántas personas hay por cada ocupación. Bueno, pues podemos hacer un agrupamiento y auxiliarnos de la función count.

-- Para usar un agrupamiento, se debe usar la restricción GROUP BY que indica los campos por los cuales se realizará el agrupamiento. Los campos por los cuales se agrupará, deben aparecer en la consulta y debe haber al menos una función de agrupamiento proyectada.

-- El símbolo * en la función count, le indica a MySQL que se deben tomar todos los registros de la tabla. 

SELECT ocupacion, count(*) “Total”
FROM persona
GROUP BY ocupacion;

-- De esta forma el resultado luce como:

---------------------
- Ocupacion - Total -
- Herrero   -   5   -
- Profesor  -  10   -
- Abogado   -  18   -
---------------------

-- Subconsultas

-- Una subconsulta consiste de consultas que incluyen otras consultas en su interior. 
-- Una subconsulta puede aparecer en la parte SELECT, en la parte FROM o en la parte WHERE de una consulta. 

-- Esta consulta consta de una subconsulta, que se ejecuta primero. De esta forma, primero obtenemos todas las direcciones que se encuentran dentro del código postal 01060 y con los resultados obtenidos (un tabla), filtramos aquellos contactos que viven en esas direcciones.

SELECT nombre, correo
FROM contactos
WHERE direccion IN 
       (SELECT direccion
        FROM ubicaciones
        WHERE codigo_postal = ‘01060’);

-- En esta consulta tomamos las columnas resultantes de la subconsulta. 
-- En este tipo de consultas MySQL pide poner un nombre a la subconsulta para poder referenciar, en caso de que sea necesario. 
-- Esta consulta primero calcula la suma de las calificaciones y el total de alumnos de una tabla y posteriormente se usan estos datos para calcular el promedio.

SELECT (Calificacion / Alumnos) AS “Promedio”
FROM 
   (SELECT sum(calif) AS “Calificacion”, count(*) AS “Alumnos”
    FROM alumnos) AS subconsulta;